apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-configmap
  namespace: monitoring-observability
data:
  build_end.rb: |
    require 'json'

    def filter(event)
      message = event.get('message')
      begin
        event_json = JSON.parse(event.get('message'))
        event.set("start_time", event_json["startTime"])
        event.set("end_time", event_json["endTime"])
        event.set("duration", event_json["duration"])
        event.set("number", event_json["number"])
      rescue
        event_json = "false"
      end

      puts "A"
      puts event_json
      puts "B"

      return [event]
    end
  logstash.yml: |
    path.config: /usr/share/logstash/pipeline
  logstash.conf: |
    input {
      tcp {
        port => "9000"
        codec => "plain"
        ssl_verify => "false"
      }
    }
    filter {
    # ruby {
    #     path => "/etc/logstash/filters/build_end.rb"
    # }
    json {
        source => "message"
      }
    }
    output {
        elasticsearch {
            hosts => [ "elasticsearch-logging:9200" ]
        }
        stdout { codec => rubydebug }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash-deployment
  namespace: monitoring-observability
  labels:
    app: logstash
spec:
  selector:
    matchLabels:
      app: logstash
  replicas: 1
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
      - name: logstash
        env:
          - name: JENKINS_HOST
            value: jenkins-server
          - name: JENKINS_PORT
            value: "8080"
        image: docker.elastic.co/logstash/logstash:6.3.0
        ports:
        - containerPort: 9000
        volumeMounts:
          - name: config-volume
            mountPath: /usr/share/logstash/config
          - name: logstash-pipeline-volume
            mountPath: /usr/share/logstash/pipeline
          - name: ruby-functions
            mountPath: /etc/logstash/filters
      volumes:
      - name: config-volume
        configMap:
          name: logstash-configmap
          items:
            - key: logstash.yml
              path: logstash.yml
      - name: logstash-pipeline-volume
        configMap:
          name: logstash-configmap
          items:
            - key: logstash.conf
              path: logstash.conf
      - name: ruby-functions
        configMap:
          name: logstash-configmap
          items:
            - key: build_end.rb
              path: build_end.rb
---
kind: Service
apiVersion: v1
metadata:
  name: logstash
  namespace: monitoring-observability
  labels:
    app: logstash
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/name: "logstash"
spec:
  selector:
    app: logstash
  ports:
  - protocol: TCP
    port: 9000
    targetPort: 9000
  type: ClusterIP
